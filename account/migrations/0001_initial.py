# Generated by Django 4.2.16 on 2025-01-06 17:28

import account.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=80)),
                ('last_name', models.CharField(max_length=135)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_investor', models.BooleanField(default=False, verbose_name='Are you an investor?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LocationData',
            fields=[
                ('date', models.DateTimeField(default=django.utils.timezone.now, primary_key=True, serialize=False, verbose_name='Date')),
                ('province', models.CharField(max_length=100, verbose_name='Province')),
                ('amphure', models.CharField(max_length=100, verbose_name='Amphure')),
                ('tambon', models.CharField(max_length=100, verbose_name='Tambon')),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[account.models.validate_lat], verbose_name='พิกัดละติจูด')),
                ('lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[account.models.validate_lng], verbose_name='พิกัดลองจิจูด')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Location Data',
                'verbose_name_plural': 'Location Data',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitor_id', models.CharField(max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('time_spent', models.PositiveIntegerField(help_text='Time spent in minutes')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='account.locationdata')),
            ],
        ),
        migrations.AddIndex(
            model_name='locationdata',
            index=models.Index(fields=['province', 'amphure', 'tambon'], name='account_loc_provinc_67f45f_idx'),
        ),
        migrations.AddIndex(
            model_name='locationdata',
            index=models.Index(fields=['lat', 'lng'], name='account_loc_lat_c13952_idx'),
        ),
    ]
